import { google } from './google/google';

export const isSet = (value: any): boolean => {
  return value !== null && value !== undefined;
};

export const isObject = (value: any): boolean => {
  return typeof value === 'object' && value !== null;
};

export const struct = {
  fromJSON(object: { [key: string]: unknown }): {
    fields: { [key: string]: google.protobuf.Value };
  } {
    return Object.entries(object).reduce(
      (acc, [key, value]) => {
        const rpcKey =
          value === null
            ? 'nullValue'
            : typeof value === 'boolean'
            ? 'boolValue'
            : `${typeof value}Value`;
        acc.fields[key] = { [rpcKey]: value === null ? 0 : value };
        return acc;
      },
      { fields: {} } as { fields: { [key: string]: google.protobuf.Value } },
    );
  },
  toJSON(message: { fields: { [key: string]: google.protobuf.Value } }): {
    [key: string]: unknown;
  } {
    return Object.entries(message.fields).reduce((acc, [key, value]) => {
      acc[key] =
        Object.keys(value as {})[0] === 'nullValue'
          ? null
          : Object.values(value as {})[0];
      return acc;
    }, {} as { [key: string]: unknown });
  },
};
